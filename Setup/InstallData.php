<?php

namespace Sanipex\Projects\Setup;

use Magento\Framework\Setup\InstallDataInterface;
use Magento\Framework\Setup\ModuleContextInterface;
use Magento\Framework\Setup\ModuleDataSetupInterface;
use Magento\UrlRewrite\Model\UrlRewrite;

class InstallData implements InstallDataInterface {

    protected $urlRewrite;
    public static $fields = [
        'url_rewrite_id',
        'entity_type',
        'entity_id',
        'request_path',
        'target_path',
        'redirect_type',
        'store_id',
        'description',
        'is_autogenerated',
        'metadata'
    ];
    public static $table = 'url_rewrite';

    public function __construct(UrlRewrite $urlRewrite) {
        $this->urlRewrite = $urlRewrite;
    }

    public function install(ModuleDataSetupInterface $setup, ModuleContextInterface $context) {
        self::insertData($setup, $context);
    }

    public function insertData(ModuleDataSetupInterface $setup, ModuleContextInterface $context) {
        if (!$this->urlRewrite->getCollection()->getItemByColumnValue('request_path', 'projects')) {
            $fields = self::$fields;
            $table = self::$table;
            $columns = [];
            foreach ($fields as $field) {
                $columns[] = $field;
            }
            $items = [
                [[null, 'custom', 0, 'projects/hospitality', 'projects/index/index/hospitality', 0, 1, null, 0, null]],
                [[null, 'custom', 0, 'projects/institutional', 'projects/index/index/institutional', 0, 1, null, 0, null]],
                [[null, 'custom', 0, 'projects/commercial-residental', 'projects/index/index/commercial-residental', 0, 1, null, 0, null]]
            ];
            foreach ($items as $data) {
                $setup->getConnection()->insertArray($setup->getTable($table), $columns, $data);
            }
        }
    }

}
